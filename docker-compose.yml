services:
  traefik:
    image: traefik
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.letsencrypt.acme.email=olespid@gmail.com"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http3.advertisedPort=443"
      - "--entrypoints.websecure.http.tls.certResolver=letsencrypt"
      - "--entrypoints.websecure.http.tls.domains[0].main=c3r5b8.dev"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.c3r5b8.dev"
      - "--metrics.prometheus=true"
      - "--entryPoints.metrics.address=:8082"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--accesslog=true"
      - "--accesslog.format=json"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`proxy.c3r5b8.dev`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    ports:
      - "80:80"
      - "443:443"
    environment:
      CF_DNS_API_TOKEN: ${CF_DNS_API_TOKEN}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./services/traefik/acme.json:/acme.json"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    networks:
      - default
      - proxy
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/Kyiv
      - WEBUI_PORT=8080
      - DOCKER_MODS=ghcr.io/vuetorrent/vuetorrent-lsio-mod:latest
      - TORRENTING_PORT=6881
    volumes:
      - ./services/qbittorrent:/config
      - /mnt/fat_ssd/media:/downloads
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorent.rule=Host(`qb.c3r5b8.dev`)"
      - "traefik.http.services.qbittorent.loadbalancer.server.port=8080"
  dnsmasq:
    image: dockurr/dnsmasq
    container_name: dnsmasq
    environment:
      DNS1: "1.0.0.1"
      DNS2: "1.1.1.1"
    volumes:
      - ./services/dnsmasq/dnsmasq.conf:/etc/dnsmasq.conf
    ports:
      - 53:53/udp
      - 53:53/tcp
    cap_add:
      - NET_ADMIN
    restart: always
  syncthing:
    image: syncthing/syncthing
    container_name: syncthing
    hostname: sargas
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /mnt/fat_ssd:/var/syncthing
    network_mode: host
    restart: unless-stopped
    healthcheck:
      test: curl -fkLsS -m 2 127.0.0.1:8384/rest/noauth/health | grep -o --color=never OK || exit 1
      interval: 1m
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.syncthing.rule=Host(`syncthing.c3r5b8.dev`)"
      - "traefik.http.services.syncthing.loadbalancer.server.port=8384"
  radicale:
    image: tomsquest/docker-radicale
    container_name: radicale
    init: true
    read_only: true
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - SETUID
      - SETGID
      - CHOWN
      - KILL
    deploy:
      resources:
        limits:
          memory: 256M
          pids: 50
    restart: unless-stopped
    volumes:
      - ./services/radicale/data:/data
      - ./services/radicale/config:/config:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radicale.rule=Host(`dav.c3r5b8.dev`)"
      - "traefik.http.services.radicale.loadbalancer.server.port=5232"
  #
  # media
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Kyiv
    volumes:
      - ./services/jellyfin:/config
      - /mnt/fat_ssd/media:/media
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.c3r5b8.dev`)"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
    restart: unless-stopped
  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    container_name: audiobookshelf
    environment:
      - TZ=Etc/Kyiv
      - PUID=1000
      - PGID=1000
    volumes:
      - /mnt/fat_ssd/media:/media
      - ./services/audiobookshelf/config:/config
      - ./services/audiobookshelf/metadata:/metadata
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.audiobookshelf.rule=Host(`audiobooks.c3r5b8.dev`)"
      - "traefik.http.services.audiobookshelf.loadbalancer.server.port=80"
    restart: unless-stopped
  multi-scrobbler:
    image: foxxmd/multi-scrobbler
    container_name: multi-scrobbler
    environment:
      - TZ=Europe/Kyiv
      - BASE_URL=https://multiscrobbler.c3r5b8.dev:443
      - PUID=1000
      - PGID=1000
    volumes:
      - "./services/multi-scrobbler:/config"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.multi-scrobbler.rule=Host(`multiscrobbler.c3r5b8.dev`)"
      - "traefik.http.services.multi-scrobbler.loadbalancer.server.port=9078"
  #
  # RSS
  fullfeedrss:
    image: 'heussd/fivefilters-full-text-rss:latest'
    container_name: fullfeedrss
    environment:
      - FTR_ADMIN_PASSWORD=
    volumes:
      - './services/fullfeedrss:/var/www/html/cache/rss'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fullfeedrss.rule=Host(`frss.c3r5b8.dev`)"
      - "traefik.http.services.fullfeedrss.loadbalancer.server.port=80"
    restart: unless-stopped
  freshrss:
    image: lscr.io/linuxserver/freshrss:latest
    container_name: freshrss
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/Kyiv
    volumes:
      - ./services/freshrss:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.freshrss.rule=Host(`rss.c3r5b8.dev`)"
      - "traefik.http.services.freshrss.loadbalancer.server.port=80"
    restart: unless-stopped
  rss-bridge:
    image: rssbridge/rss-bridge:latest
    container_name: rss-bridge
    volumes:
      - ./services/rss-bridge:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rss-bridge.rule=Host(`rssb.c3r5b8.dev`)"
      - "traefik.http.services.rss-bridge.loadbalancer.server.port=80"
    restart: unless-stopped
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
  memos:
    image: neosmemo/memos:stable
    container_name: memos
    restart: unless-stopped
    volumes:
      - ./services/memos/:/var/opt/memos
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.memos.rule=Host(`memo.c3r5b8.dev`)"
      - "traefik.http.services.memos.loadbalancer.server.port=5230"
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.rule=Host(`pass.c3r5b8.dev`)"
      - "traefik.http.services.vaultwarden.loadbalancer.server.port=80"
    volumes:
      - ./services/vaultwarden:/data
    environment:
      - DOMAIN=https://pass.c3r5b8.dev
      - WEBSOCKET_ENABLED=true
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./services/dozzle:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dozzle.rule=Host(`dozzle.c3r5b8.dev`)"
    environment:
      DOZZLE_AUTH_PROVIDER: simple
  changedetection:
    image: ghcr.io/dgtlmoon/changedetection.io:latest
    container_name: changedetection
    hostname: changedetection
    restart: unless-stopped
    volumes:
      - ./services/changedetection:/datastore
    environment:
      - PLAYWRIGHT_DRIVER_URL=ws://browser-sockpuppet-chrome:3000
      - TZ=Europe/Kyiv
      - BASE_URL=https://watch.c3r5b8.dev
      - HIDE_REFERER=true
      - DISABLE_VERSION_CHECK=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.changedetection.rule=Host(`watch.c3r5b8.dev`)"
      - "traefik.http.services.changedetection.loadbalancer.server.port=5000"
    depends_on:
      browser-sockpuppet-chrome:
        condition: service_started
  browser-sockpuppet-chrome:
    image: dgtlmoon/sockpuppetbrowser:latest
    container_name: browser-sockpuppet-chrome
    hostname: browser-sockpuppet-chrome
    restart: unless-stopped
    cap_add:
      - SYS_ADMIN
  factorio:
    image: factoriotools/factorio:stable
    container_name: factorio
    environment:
      - INSTANCE_NAME=Mazafuckers
      - INSTANCE_DESC=idk
    ports:
      - "34197:34197/udp"
      - "27015:27015/tcp"
    volumes:
      - ./services/factorio:/factorio
    restart: unless-stopped
networks:
  proxy:
    external: true
