version: '3.8'

services:
  traefik:
    image: traefik
    command:
      # - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.letsencrypt.acme.email=olespid@gmail.com"
      # HTTP
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      # HTTPS
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certResolver=letsencrypt"
      - "--entrypoints.websecure.http.tls.domains[0].main=c3r5b8.dev"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.c3r5b8.dev"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`proxy.c3r5b8.dev`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    ports:
      - "80:80"
      - "443:443"
    environment:
      CF_DNS_API_TOKEN: ${CF_DNS_API_TOKEN}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./services/traefik/acme.json:/acme.json"
    extra_hosts:
      - "host.docker.internal:host-gateway"
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/Kyiv
    volumes:
      - ./services/sonarr:/config
      - /mnt/fat_ssd/downloads:/downloads
      - /mnt/fat_ssd/media/tv:/tv
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.c3r5b8.dev`)"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    restart: unless-stopped
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/Kyiv
    volumes:
      - ./services/radarr:/config
      - /mnt/fat_ssd/downloads:/downloads
      - /mnt/fat_ssd/media/movies:/movies
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.c3r5b8.dev`)"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    restart: unless-stopped
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/Kyiv
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.c3r5b8.dev`)"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
    volumes:
      - ./services/prowlarr:/config
    restart: unless-stopped
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - ./services/qbittorrent:/config
      - /mnt/fat_ssd/downloads:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorrent.rule=Host(`qbittorrent.c3r5b8.dev`)"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8080"
    ports:
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flaresolverr.rule=Host(`flaresolverr.c3r5b8.dev`)"
      - "traefik.http.services.flaresolverr.loadbalancer.server.port=8191"
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
      - TZ=Europe/Kyiv
    restart: unless-stopped
  nextcloud:
    image: lscr.io/linuxserver/nextcloud:latest
    container_name: nextcloud
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/Kyiv
    volumes:
      - ./services/nextcloud:/config
      - /mnt/fat_ssd/nextcloud:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`nextcloud.c3r5b8.dev`)"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
    restart: unless-stopped
  # # Example Docker Compose config file for PhotoPrism (Linux / AMD64)
  # #
  # # Note:
  # # - Running PhotoPrism on a server with less than 4 GB of swap space or setting a memory/swap limit can cause unexpected
  # #   restarts ("crashes"), for example, when the indexer temporarily needs more memory to process large files.
  # # - If you install PhotoPrism on a public server outside your home network, please always run it behind a secure
  # #   HTTPS reverse proxy such as Traefik or Caddy. Your files and passwords will otherwise be transmitted
  # #   in clear text and can be intercepted by anyone, including your provider, hackers, and governments:
  # #   https://docs.photoprism.app/getting-started/proxies/traefik/
  # #
  # # Setup Guides:
  # # - https://docs.photoprism.app/getting-started/docker-compose/
  # # - https://docs.photoprism.app/getting-started/raspberry-pi/
  # # - https://www.photoprism.app/kb/activation
  # #
  # # Troubleshooting Checklists:
  # # - https://docs.photoprism.app/getting-started/troubleshooting/
  # # - https://docs.photoprism.app/getting-started/troubleshooting/docker/
  # # - https://docs.photoprism.app/getting-started/troubleshooting/mariadb/
  # #
  # # CLI Commands:
  # # - https://docs.photoprism.app/getting-started/docker-compose/#command-line-interface
  # #
  # # All commands may have to be prefixed with "sudo" when not running as root.
  # # This will point the home directory shortcut ~ to /root in volume mounts.

  # photoprism:
  #   image: photoprism/photoprism:latest
  #   ## Don't enable automatic restarts until PhotoPrism has been properly configured and tested!
  #   ## If the service gets stuck in a restart loop, this points to a memory, filesystem, network, or database issue:
  #   ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
  #   # restart: unless-stopped
  #   stop_grace_period: 10s
  #   depends_on:
  #     - mariadb
  #   security_opt:
  #     - seccomp:unconfined
  #     - apparmor:unconfined

  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.photoprism.rule=Host(`photoprism.c3r5b8.dev`)"
  #     - "traefik.http.services.photoprism.loadbalancer.server.port=2342"
  #   ## Before you start the service, please check the following config options (and change them as needed):
  #   ## https://docs.photoprism.app/getting-started/config-options/
  #   environment:
  #     PHOTOPRISM_ADMIN_USER: "admin" # admin login username
  #     PHOTOPRISM_ADMIN_PASSWORD: ${PHOTOPRISM_ADMIN_PASSWORD} # initial admin password (8-72 characters)
  #     PHOTOPRISM_AUTH_MODE: "password" # authentication mode (public, password)
  #     PHOTOPRISM_SITE_URL: "https://photoprism.c3r5b8.dev" # server URL in the format "http(s)://domain.name(:port)/(path)"
  #     PHOTOPRISM_DISABLE_TLS: "true" # disables HTTPS/TLS even if the site URL starts with https:// and a certificate is available
  #     PHOTOPRISM_DEFAULT_TLS: "true" # defaults to a self-signed HTTPS/TLS certificate if no other certificate is available
  #     PHOTOPRISM_ORIGINALS_LIMIT: 15000 # file size limit for originals in MB (increase for high-res video)
  #     PHOTOPRISM_HTTP_COMPRESSION: "gzip" # improves transfer speed and bandwidth utilization (none or gzip)
  #     PHOTOPRISM_LOG_LEVEL: "info" # log level: trace, debug, info, warning, error, fatal, or panic
  #     PHOTOPRISM_READONLY: "false" # do not modify originals directory (reduced functionality)
  #     PHOTOPRISM_EXPERIMENTAL: "false" # enables experimental features
  #     PHOTOPRISM_DISABLE_CHOWN: "false" # disables updating storage permissions via chmod and chown on startup
  #     PHOTOPRISM_DISABLE_WEBDAV: "false" # disables built-in WebDAV server
  #     PHOTOPRISM_DISABLE_SETTINGS: "false" # disables settings UI and API
  #     PHOTOPRISM_DISABLE_TENSORFLOW: "false" # disables all features depending on TensorFlow
  #     PHOTOPRISM_DISABLE_FACES: "false" # disables face detection and recognition (requires TensorFlow)
  #     PHOTOPRISM_DISABLE_CLASSIFICATION: "false" # disables image classification (requires TensorFlow)
  #     PHOTOPRISM_DISABLE_VECTORS: "false" # disables vector graphics support
  #     PHOTOPRISM_DISABLE_RAW: "false" # disables indexing and conversion of RAW images
  #     PHOTOPRISM_RAW_PRESETS: "false" # enables applying user presets when converting RAW images (reduces performance)
  #     PHOTOPRISM_SIDECAR_YAML: "true" # creates YAML sidecar files to back up picture metadata
  #     PHOTOPRISM_BACKUP_ALBUMS: "true" # creates YAML files to back up album metadata
  #     PHOTOPRISM_BACKUP_DATABASE: "true" # creates regular backups based on the configured schedule
  #     PHOTOPRISM_BACKUP_SCHEDULE: "daily" # backup SCHEDULE in cron format (e.g. "0 12 * * *" for daily at noon) or at a random time (daily, weekly)
  #     PHOTOPRISM_INDEX_SCHEDULE: "" # indexing SCHEDULE in cron format (e.g. "@every 3h" for every 3 hours; "" to disable)
  #     PHOTOPRISM_AUTO_INDEX: 120 # delay before automatically indexing files in SECONDS when uploading via WebDAV (-1 to disable)
  #     PHOTOPRISM_AUTO_IMPORT: 150 # delay before automatically importing files in SECONDS when uploading via WebDAV (-1 to disable)
  #     PHOTOPRISM_DETECT_NSFW: "true" # automatically flags photos as private that MAY be offensive (requires TensorFlow)
  #     PHOTOPRISM_UPLOAD_NSFW: "true" # allows uploads that MAY be offensive (no effect without TensorFlow)
  #     # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that doesn't require a server
  #     PHOTOPRISM_DATABASE_DRIVER: "mysql" # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
  #     PHOTOPRISM_DATABASE_SERVER: "mariadb:3306" # MariaDB or MySQL database server (hostname:port)
  #     PHOTOPRISM_DATABASE_NAME: "photoprism" # MariaDB or MySQL database schema name
  #     PHOTOPRISM_DATABASE_USER: "photoprism" # MariaDB or MySQL database user name
  #     PHOTOPRISM_DATABASE_PASSWORD: ${PHOTOPRISM_ADMIN_PASSWORD} # MariaDB or MySQL database user password
  #     PHOTOPRISM_SITE_CAPTION: "AI-Powered Photos App"
  #     PHOTOPRISM_SITE_DESCRIPTION: "" # meta site description
  #     PHOTOPRISM_SITE_AUTHOR: "" # meta site author
  #     ## Video Transcoding (https://docs.photoprism.app/getting-started/advanced/transcoding/):
  #     # PHOTOPRISM_FFMPEG_ENCODER: "software"        # H.264/AVC encoder (software, intel, nvidia, apple, raspberry, or vaapi)
  #     # PHOTOPRISM_FFMPEG_SIZE: "1920"               # video size limit in pixels (720-7680) (default: 3840)
  #     # PHOTOPRISM_FFMPEG_BITRATE: "32"              # video bitrate limit in Mbit/s (default: 50)
  #     ## Run/install on first startup (options: update https gpu tensorflow davfs clitools clean):
  #     # PHOTOPRISM_INIT: "https gpu tensorflow"
  #     ## Run as a non-root user after initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
  #     # PHOTOPRISM_UID: 1000
  #     # PHOTOPRISM_GID: 1000
  #     # PHOTOPRISM_UMASK: 0000
  #     ## Start as non-root user before initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
  #     # user: "1000:1000"
  #     ## Share hardware devices with FFmpeg and TensorFlow (optional):
  #     # devices:
  #     #  - "/dev/dri:/dev/dri"                         # Intel QSV
  #     #  - "/dev/nvidia0:/dev/nvidia0"                 # Nvidia CUDA
  #     #  - "/dev/nvidiactl:/dev/nvidiactl"
  #     #  - "/dev/nvidia-modeset:/dev/nvidia-modeset"
  #     #  - "/dev/nvidia-nvswitchctl:/dev/nvidia-nvswitchctl"
  #     #  - "/dev/nvidia-uvm:/dev/nvidia-uvm"
  #     #  - "/dev/nvidia-uvm-tools:/dev/nvidia-uvm-tools"
  #     #  - "/dev/video11:/dev/video11"                 # Video4Linux Video Encode Device (h264_v4l2m2m)
  #   working_dir: "/photoprism" # do not change or remove
  #   ## Storage Folders: "~" is a shortcut for your home directory, "." for the current directory
  #   volumes:
  #     # "/host/folder:/photoprism/folder"                # Example
  #     - ":/photoprism/originals" # Original media files (DO NOT REMOVE)
  #     # - "/example/family:/photoprism/originals/family" # *Additional* media folders can be mounted like this
  #     # - "~/Import:/photoprism/import"                  # *Optional* base folder from which files can be imported to originals
  #     - "/mnt/fat_ssd/photoprism:/photoprism/storage" # *Writable* storage folder for cache, database, and sidecar files (DO NOT REMOVE)

  # mariadb:
  #   image: mariadb:11
  #   restart: unless-stopped
  #   stop_grace_period: 5s
  #   security_opt:
  #     - seccomp:unconfined
  #     - apparmor:unconfined
  #   command: --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
  #   volumes:
  #     - "./services/mysql:/var/lib/mysql" # DO NOT REMOVE
  #   environment:
  #     MARIADB_AUTO_UPGRADE: "1"
  #     MARIADB_INITDB_SKIP_TZINFO: "1"
  #     MARIADB_DATABASE: "photoprism"
  #     MARIADB_USER: "photoprism"
  #     MARIADB_PASSWORD: ${PHOTOPRISM_ADMIN_PASSWORD}
  #     MARIADB_ROOT_PASSWORD: ${PHOTOPRISM_ADMIN_PASSWORD}
